services:
  fe_evolution:
    image: atendai/evolution-api:v2.2.2
    restart: always
    environment:
    #SERVER
      - SERVER_TYPE=${SERVER_TYPE}
      - SERVER_PORT=${SERVER_PORT}
      - SERVER_URL=${SERVER_URL}
    #AUTENTICACAO
      - AUTHENTICATION_API_KEY=${AUTHENTICATION_API_KEY}
      - AUTHENTICATION_EXPOSE_IN_FETCH_INSTANCES=${AUTHENTICATION_EXPOSE_IN_FETCH_INSTANCES}
    #INSTANCIAS
      - DEL_INSTANCE=${DEL_INSTANCE}
    #WEBHOOK
      - WEBHOOK_GLOBAL_ENABLED=${WEBHOOK_GLOBAL_ENABLED}
    #SESSAO
      - CONFIG_SESSION_PHONE_CLIENT=${CONFIG_SESSION_PHONE_CLIENT}
      - CONFIG_SESSION_PHONE_NAME=${CONFIG_SESSION_PHONE_NAME}
    #QR-CODE
      - QRCODE_LIMIT=${QRCODE_LIMIT}
      - QRCODE_COLOR=${QRCODE_COLOR}
    #CACHE
      - CACHE_REDIS_ENABLED=${CACHE_REDIS_ENABLED}
      - CACHE_REDIS_URI=${CACHE_REDIS_URI}
      - CACHE_REDIS_PREFIX_KEY=${CACHE_REDIS_PREFIX_KEY}
      - CACHE_REDIS_SAVE_INSTANCES=${CACHE_REDIS_SAVE_INSTANCES}
      - CACHE_LOCAL_ENABLED=${CACHE_LOCAL_ENABLED}
    #ARMAZENAMENTO
      - S3_ENABLED=${S3_ENABLED}
      - DATABASE_ENABLED=${DATABASE_ENABLED}
      - DATABASE_PROVIDER=${DATABASE_PROVIDER}
      - DATABASE_CONNECTION_URI=${DATABASE_CONNECTION_URI}
      - DATABASE_CONNECTION_CLIENT_NAME=${DATABASE_CONNECTION_CLIENT_NAME}
      - DATABASE_SAVE_DATA_INSTANCE=${DATABASE_SAVE_DATA_INSTANCE}
      - DATABASE_SAVE_DATA_NEW_MESSAGE=${DATABASE_SAVE_DATA_NEW_MESSAGE}
      - DATABASE_SAVE_MESSAGE_UPDATE=${DATABASE_SAVE_MESSAGE_UPDATE}
      - DATABASE_SAVE_DATA_CONTACTS=${DATABASE_SAVE_DATA_CONTACTS}
      - DATABASE_SAVE_DATA_CHATS=${DATABASE_SAVE_DATA_CHATS}
      - DATABASE_SAVE_DATA_LABELS=${DATABASE_SAVE_DATA_LABELS}
      - DATABASE_SAVE_DATA_HISTORIC=${DATABASE_SAVE_DATA_HISTORIC}
    #SERVICOS
      - CHATWOOT_ENABLED=${CHATWOOT_ENABLED}
      - OPENAI_ENABLED=${OPENAI_ENABLED}
      - DIFY_ENABLED=${DIFY_ENABLED}
    #LOGS
      - LOG_LEVEL=${LOG_LEVEL}
      - LOG_COLOR=${LOG_COLOR}
      - LOG_BAILEYS=${LOG_BAILEYS}
    volumes:
      - fe_evo_instances:/evolution/instances
    networks:
      - proxy_network
    logging:
      driver: json-file
      options:
        max-size: 10m
        max-file: "3"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback 
        monitor: 60s
        max_failure_ratio: 0.2
      placement:
        constraints:
          - node.role == worker
          - node.labels.environment == flowenvia
    depends_on:
      - fe_mysql
      - fe_redis

  fe_mysql:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - fe_mysql_data:/var/lib/mysql
    networks:
      - proxy_network
    logging:
      driver: json-file
      options:
        max-size: 10m
        max-file: "3"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback 
        monitor: 60s
        max_failure_ratio: 0.2
      placement:
        constraints:
          - node.role == worker
          - node.labels.environment == flowenvia
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
  
  fe_redis:
    image: redis:alpine
    command: redis-server --appendonly yes
    volumes:
      - fe_redis_data:/data
    networks:
      - proxy_network
    logging:
      driver: json-file
      options:
        max-size: 10m
        max-file: "3"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback 
        monitor: 60s
        max_failure_ratio: 0.2
      placement:
        constraints:
          - node.role == worker
          - node.labels.environment == flowenvia
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    
volumes:
  fe_evo_instances:
    external: true
  fe_mysql_data:
    external: true
  fe_redis_data:
    external: true
networks:
  proxy_network:
    external: true
