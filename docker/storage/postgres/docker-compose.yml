services:
  postgres:
    image: pgvector/pgvector:0.8.0-pg17
    networks:
      - app_network
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    logging:
      driver: json-file
      options:
        max-size: 10m
        max-file: "3"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback 
        monitor: 60s
        max_failure_ratio: 0.2
      placement:
        constraints:
          - node.role == manager
  pgbouncer:
    image: edoburu/pgbouncer:latest
    healthcheck:
      test: ['CMD', 'pg_isready', '-h', 'localhost']
    networks:
      - app_network
    ports:
      - "5432:5432"
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_HOST=${DB_HOST}
      - AUTH_TYPE=${AUTH_TYPE}
      - POOL_MODE=${POOL_MODE}
      - MAX_CLIENT_CONN=${MAX_CLIENT_CONN}
      - DEFAULT_POOL_SIZE=${DEFAULT_POOL_SIZE}
    volumes:
      - pgbouncer_data:/etc/pgbouncer 
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback 
        monitor: 60s
        max_failure_ratio: 0.2
      placement:
        constraints:
          - node.role == manager       
          
networks:
  app_network:
    external: true

volumes:
  postgres_data:
    external: true
  pgbouncer_data:
    external: true
