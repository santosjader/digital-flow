services:
  chatwoot_app:
    image: chatwoot/chatwoot:latest
    restart: always
    command: sh -c "bundle exec rails db:migrate && bundle exec rails s -p 3000 -b 0.0.0.0"
    entrypoint: docker/entrypoints/rails.sh
    volumes:
      - chatwoot_data:/app/storage
    networks:
      - proxy_network
      - app_network
    environment:
      - FRONTEND_URL=${FRONTEND_URL}
      - RAILS_ENV=${RAILS_ENV}
      - SECRET_KEY_BASE=${SECRET_KEY_BASE}
      - ENABLE_ACCOUNT_SIGNUP=${ENABLE_ACCOUNT_SIGNUP}
      - DEFAULT_LOCALE=${DEFAULT_LOCALE}
      - ACTIVE_STORAGE_SERVICE=${ACTIVE_STORAGE_SERVICE}
      - STORAGE_BUCKET_NAME=${STORAGE_BUCKET_NAME}  
      - STORAGE_ACCESS_KEY_ID=${STORAGE_ACCESS_KEY_ID}
      - STORAGE_SECRET_ACCESS_KEY=${STORAGE_SECRET_ACCESS_KEY}
      - STORAGE_REGION=${STORAGE_REGION}
      - STORAGE_ENDPOINT=${STORAGE_ENDPOINT}
      - STORAGE_FORCE_PATH_STYLE=${STORAGE_FORCE_PATH_STYLE}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_USERNAME=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DATABASE=${POSTGRES_DATABASE}
      - REDIS_URL=${REDIS_URL}
      - MAILER_SENDER_EMAIL=${MAILER_SENDER_EMAIL}
      - SMTP_ADDRESS=${SMTP_ADDRESS}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_TLS=${SMTP_TLS}
      - SMTP_SSL=${SMTP_SSL}
    logging:
      driver: json-file
      options:
        max-size: 10m
        max-file: "3"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback 
        monitor: 60s
        max_failure_ratio: 0.2
      placement:
        constraints:
          - node.role == worker

  chatwoot_worker:
    image: chatwoot/chatwoot:latest
    restart: always
    command: bundle exec sidekiq -C config/sidekiq.yml
    volumes:
      - chatwoot_data:/app/storage
    networks:
      - proxy_network
      - app_network
    environment:
      - FRONTEND_URL=${FRONTEND_URL}
      - RAILS_ENV=${RAILS_ENV}
      - SECRET_KEY_BASE=${SECRET_KEY_BASE}
      - ENABLE_ACCOUNT_SIGNUP=${ENABLE_ACCOUNT_SIGNUP}
      - DEFAULT_LOCALE=${DEFAULT_LOCALE}
      - ACTIVE_STORAGE_SERVICE=${ACTIVE_STORAGE_SERVICE}
      - STORAGE_BUCKET_NAME=${STORAGE_BUCKET_NAME}  
      - STORAGE_ACCESS_KEY_ID=${STORAGE_ACCESS_KEY_ID}
      - STORAGE_SECRET_ACCESS_KEY=${STORAGE_SECRET_ACCESS_KEY}
      - STORAGE_REGION=${STORAGE_REGION}
      - STORAGE_ENDPOINT=${STORAGE_ENDPOINT}
      - STORAGE_FORCE_PATH_STYLE=${STORAGE_FORCE_PATH_STYLE}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_USERNAME=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DATABASE=${POSTGRES_DATABASE}
      - REDIS_URL=${REDIS_URL}
      - MAILER_SENDER_EMAIL=${MAILER_SENDER_EMAIL}
      - SMTP_ADDRESS=${SMTP_ADDRESS}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_TLS=${SMTP_TLS}
      - SMTP_SSL=${SMTP_SSL}
    logging:
      driver: json-file
      options:
        max-size: 10m
        max-file: "3"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback 
        monitor: 60s
        max_failure_ratio: 0.2
      placement:
        constraints:
          - node.role == worker

  evolution_api:
    image: atendai/evolution-api:v1.8.2
    restart: always
    environment:
      - TYPEBOT_ENABLED=${TYPEBOT_ENABLED}
      - DIFY_ENABLED=${DIFY_ENABLED}
      - CHATWOOT_ENABLED=${CHATWOOT_ENABLED}
      - OPENAI_ENABLE=${OPENAI_ENABLE}
      - SERVER_URL=${SERVER_URL}
      - AUTHENTICATION_API_KEY=${AUTHENTICATION_API_KEY}
      - CACHE_REDIS_ENABLED=${CACHE_REDIS_ENABLED}
      - CACHE_REDIS_PREFIX_KEY=${CACHE_REDIS_PREFIX_KEY}
      - CACHE_REDIS_SAVE_INSTANCES=${CACHE_REDIS_SAVE_INSTANCES}
      - CACHE_LOCAL_ENABLED=${CACHE_LOCAL_ENABLED}
    volumes:
      - evo_store:/evolution/store
      - evo_instances:/evolution/instances
    networks:
      - app_network
      - proxy_network
    logging:
      driver: json-file
      options:
        max-size: 10m
        max-file: "3"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback 
        monitor: 60s
        max_failure_ratio: 0.2
      placement:
        constraints:
          - node.role == manager

  typebot_builder:
    image: baptistearno/typebot-builder:3.2.0
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - ENCRYPTION_SECRET=${ENCRYPTION_SECRET}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - NEXT_PUBLIC_VIEWER_URL=${NEXT_PUBLIC_VIEWER_URL}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - NEXT_PUBLIC_SMTP_FROM=${NEXT_PUBLIC_SMTP_FROM}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_SECURE=${SMTP_SECURE}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_BUCKET=${S3_BUCKET}
      - S3_ENDPOINT=${S3_ENDPOINT}
      - DISABLE_SIGNUP=${DISABLE_SIGNUP}
    networks:
      - app_network
      - proxy_network
    logging:
      driver: json-file
      options:
        max-size: 10m
        max-file: "3"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback 
        monitor: 60s
        max_failure_ratio: 0.2
      placement:
        constraints:
          - node.role == worker

  typebot_viewer:
    image: baptistearno/typebot-viewer:3.2.0
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - ENCRYPTION_SECRET=${ENCRYPTION_SECRET}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - NEXT_PUBLIC_VIEWER_URL=${NEXT_PUBLIC_VIEWER_URL}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - NEXT_PUBLIC_SMTP_FROM=${NEXT_PUBLIC_SMTP_FROM}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_SECURE=${SMTP_SECURE}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_BUCKET=${S3_BUCKET}
      - S3_ENDPOINT=${S3_ENDPOINT}
      - DISABLE_SIGNUP=${DISABLE_SIGNUP}
    networks:
      - app_network
      - proxy_network
    logging:
      driver: json-file
      options:
        max-size: 10m
        max-file: "3"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback 
        monitor: 60s
        max_failure_ratio: 0.2
      placement:
        constraints:
          - node.role == worker

volumes:
  chatwoot_data:
    external: true
  evo_store:
    external: true
  evo_instances:
    external: true

networks:
  app_network:
    external: true
  proxy_network:
    external: true
